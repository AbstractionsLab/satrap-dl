active: true
derived: false
header: |
  TypeDB utilities
level: 4
links:
- ARC-001: y3hraERh10v0ZeagXw10yVa2irVB_Wq1bOHAkBVKLUM=
- ARC-002: Ui5Z6JsqJkwmNktqyF6bqwgovVGHvHZbHdsvs4Hlrjs=
- ARC-003: R0GD-wyqQaUFXEDlm6ChoGsrdZGrFgK3Vhcompn3I5g=
- ARC-004: YQ8rkbIXe2QD1DWLdeWsLSHiG8a-BZ0uA6j3ggLhWVA=
normative: true
ref: ''
references:
- keyword: TypeDBBatchInsertHandler
  path: satrap/datamanagement/typedb/inserthandler.py
  type: file
- path: satrap/datamanagement/typedb/dataobjects.py
  type: file
reviewed: AgObU5d2ya3CkQ3Vl1xo2CD_ebYJ-5nBbdhh4ij1sZA=
text: |
  As the ETL process will load the data into a TypeDB database, dedicated functionality for TypeDB objects is required.
  Instead of hardcoding this functionality like string creation for the insert queries into the main ETL components, a separate typedb package is created that handles all functionality that is only TypeDB functionality and can be used in more contexts than just ETL systems.

  A class diagram for a full overview is provided below:

  ![TypeDB package overview](assets/2C0A2D_DIA_TypeDB-PackageOverview.drawio.png "TypeDB package overview"){: width="60%"}

  **VariableDealer** This class has two static functions get_variable and reset. The VariableDealer is responsible for distributing variables for TypeQL queries that are always unique. This is required so different statements in a single insert query do not affect each other

  **Entity & Relation** The Entity and the Relation classes represent TypeDB’s entity and relation objects. The classes are mainly data classes. They have a common supertype Thing analogous to TypeDB’s thing type (which is deprecated and will be removed in TypeDB 3.01) that has the functionality for assigning variables and attributes. In addition, relations have roles and roleplayers.

  **InsertQuery** The InsertQuery data class represents insert queries that consist of match and insert statements.

  **TypeQLBuilder** The TypeQLBuilder builds queries as strings for certain TypeDB Objects. For example it can build the string representation for InsertQuery objects.

  **TypeDBInserter** The TypeDBInserter handles insertions into a TypeDB database with its insert method. For communication with the database, it makes use of the official TypeDB driver package. There are two ways to use this class, either in a `with` block or as usual. The usage in the `with` block automatically takes care of creating and closing the TypeDBDriver connnection, while using the Inserter without the `with` block allows using it when the driver has already been set up by another class or is still needed after the inserter finished his work. The insertion queries are passed as strings.
